services:
  proxy:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.proxy
    env_file: .env
    ports:
      - "${PROXY_PORT}:${PROXY_PORT}"
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy

  requester:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.requester
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    
  broker:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "${RABBIT_AMQP_PORT}:${RABBIT_AMQP_PORT}"
      - "${RABBIT_UI_PORT}:${RABBIT_UI_PORT}"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_PASSWORD}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 20s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data:
